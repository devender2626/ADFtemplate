{
	"name": "df_solicit_files_process_error",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blob_solicit_json",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_blob_solicit_files_processor",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "parameters{\n\tfilename as string\n}\nsource(output(\n\t\tcampaignCode as string,\n\t\tcloseDate as string,\n\t\t{customer.address1} as string,\n\t\t{customer.countryCode} as string,\n\t\t{customer.dateOfBirth} as string,\n\t\t{customer.emailAddress} as string,\n\t\t{customer.firstName} as string,\n\t\t{customer.firstNameKana} as string,\n\t\t{customer.id} as string,\n\t\t{customer.lastName} as string,\n\t\t{customer.lastNameKana} as string,\n\t\t{customer.workPhoneNumber} as string,\n\t\t{customer.zipCode} as string,\n\t\teffectiveDate as string,\n\t\terrors as (code as string, description as string)[],\n\t\topenDate as string,\n\t\t{origin.channelCode} as string,\n\t\t{origin.organization.address1} as string,\n\t\t{origin.organization.code} as string,\n\t\t{origin.organization.countryCode} as string,\n\t\t{origin.organization.disconnectionReason} as string,\n\t\t{origin.organization.name} as string,\n\t\t{origin.organization.workPhoneNumber} as string,\n\t\t{origin.organization.zipCode} as string,\n\t\t{origin.salesOrderNumber} as string,\n\t\t{owner.organization.code} as string,\n\t\t{owner.serviceLineNumber} as string,\n\t\tstatus as string,\n\t\ttype as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource1 filter(upper(status)=='REJECTED') ~> Filter1\nFilter1 derive(error_code = iif(length(errors[1].code)>0, toString(errors[1].code),\"\"),\n\t\terror_description = iif(length(errors[1].description)>0, toString(errors[1].description),\"\"),\n\t\tBirthDaytoString = coalesce(toString(toDate({customer.dateOfBirth}, 'yyyy-MM-dd'),'yyyy/MM/dd'),{customer.dateOfBirth}),\n\t\tApplyDatetoString = coalesce(toString(toDate(effectiveDate, 'yyyy-MM-dd'),'yyyy/MM/dd'),effectiveDate),\n\t\topenDatetoString = coalesce(toString(toDate(openDate, 'yyyy-MM-dd'),'yyyy/MM/dd'),openDate),\n\t\tCloseDatetoString = coalesce(toString(toDate(closeDate, 'yyyy-MM-dd'),'yyyy/MM/dd'),closeDate)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(replace(upper($filename), upper(\".txt\"), \".ERR\"))],\n\tmapColumn(\n\t\tInitialSalesOrderNumber = {origin.salesOrderNumber},\n\t\tCustomerID = {customer.id},\n\t\tApplyDate = ApplyDatetoString,\n\t\tOpenDate = openDatetoString,\n\t\tCloseDate = CloseDatetoString,\n\t\tLastName = {customer.lastName},\n\t\tFirstName = {customer.firstName},\n\t\tLastNameKana = {customer.lastNameKana},\n\t\tFirstNameKana = {customer.firstNameKana},\n\t\tBirthday = BirthDaytoString,\n\t\tPostalCode = {customer.zipCode},\n\t\tAddress = {customer.address1},\n\t\tTelephoneNumber = {customer.workPhoneNumber},\n\t\t{E-mail} = {customer.emailAddress},\n\t\tSIMPhoneNumber = {owner.serviceLineNumber},\n\t\tShopID = {origin.organization.code},\n\t\tSalesChannel = {origin.channelCode},\n\t\tShopName = {origin.organization.name},\n\t\tShopZipCode = {origin.organization.zipCode},\n\t\tShopAddress = {origin.organization.address1},\n\t\tShopTelephoneNumber = {origin.organization.workPhoneNumber},\n\t\tDisconnectionReason = {origin.organization.disconnectionReason},\n\t\tRejectCode = error_code,\n\t\tRejectDescription = error_description\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}