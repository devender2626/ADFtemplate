{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-solicitations-intg"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/tr_sa_fileingress_dev')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/fileingest/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "/subscriptions/19d8d1ac-3f00-4c5a-a1b6-6f65a774c7c2/resourceGroups/RGElitaPOC/providers/Microsoft.Storage/storageAccounts/soliciteventsa",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_solicit_files_process')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_solicit_files",
								"type": "DatasetReference"
							},
							"name": "GetFileData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_blob_solicit_files_processor",
								"type": "DatasetReference"
							},
							"name": "ProcessToFileDetails"
						},
						{
							"dataset": {
								"referenceName": "ds_blob_solicit_files_processor",
								"type": "DatasetReference"
							},
							"name": "ProcessToFileInfo"
						}
					],
					"transformations": [
						{
							"name": "Transform"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "TransformToFileDetails"
						},
						{
							"name": "TransformToFileDetailsCSV"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "TransformFileinfo"
						},
						{
							"name": "TransformFileInfoCSV"
						},
						{
							"name": "TransformDateFields"
						},
						{
							"name": "CheckDateColumnsYear"
						}
					],
					"script": "parameters{\n\tfilename as string,\n\tcompanycode as string (\"AJP\"),\n\tdealercode as string (\"RSIM\"),\n\tOperation as string (\"ENROLLMENT\")\n}\nsource(output(\n\t\tInitialSalesOrderNumber as string,\n\t\tCustomerID as string,\n\t\tApplyDate as string,\n\t\tOpenDate as string,\n\t\tCloseDate as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tLastNameKana as string,\n\t\tFirstNameKana as string,\n\t\tBirthday as string,\n\t\tPostalCode as string,\n\t\tAddress as string,\n\t\tTelephoneNumber as string,\n\t\t{E-mail} as string,\n\t\tSIMPhoneNumber as string,\n\t\tShopID as string,\n\t\tSalesChannel as string,\n\t\tShopName as string,\n\t\tShopZipCode as string,\n\t\tShopAddress as string,\n\t\tShopTelephoneNumber as string,\n\t\tDisconnectionReason as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:[($filename)],\n\tpartitionBy('hash', 1)) ~> GetFileData\nTransformDateFields derive(Status = \"Active\",\n\t\tcommandSourceType = \"File\",\n\t\tcommandSourceName = $filename,\n\t\tcampaignCode = $dealercode,\n\t\tError = iif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && SalesNumberCount> 1 ,\"Duplicate Records exists in file\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (isNull(Aggregate1@InitialSalesOrderNumber)),\"Mandatory field missing-InitialSalesOrderNumber\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (length(Aggregate1@InitialSalesOrderNumber)>28),\"Field length exceeded-InitialSalesOrderNumber\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (isNull(CustomerID)),\"Mandatory field missing-CustomerID\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (length(CustomerID)>32),\"Field length exceeded -CustomerID\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(ApplyDate)) ,\"Mandatory field missing-ApplyDate\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(ApplyDatetoString)|| length(ApplyDatetoString)<1) ,\"Date should be valid date in yyyy/MM/dd Format-ApplyDate\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(OpenDate)) ,\"Mandatory field missing-OpenDate\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(OpenDatetoString) || length(OpenDatetoString)<1) ,\"Date should be valid date in yyyy/MM/dd Format-OpenDate\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(LastName)),\"Mandatory field missing-LastName\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(LastName) >30),\"Field length exceeded -LastName\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(FirstName)) ,\"Mandatory field missing-FirstName\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(FirstName) >60) ,\"Field length exceeded -FirstName\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(LastNameKana)),\"Mandatory field missing-LastNameKana\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(LastNameKana) >30),\"Field length exceeded -LastNameKana\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(FirstNameKana)),\"Mandatory field missing-FirstNameKana\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(FirstNameKana) >60),\"Field length exceeded -FirstNameKana\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(Birthday)) ,\"Mandatory field missing-Birthday\", \niif((upper($Operation)==\"ENROLLMENT\") && (isNull(BirthDaytoString) || length(BirthDaytoString)<1) ,\"Date should be valid date in yyyy/MM/dd Format-Birthday\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(PostalCode)),\"Mandatory field missing-PostalCode\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(PostalCode)!=7),\"Field length should be 7 digit only-PostalCode\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(Address)),\"Mandatory field missing-Address\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(Address)>100),\"Field length exceeded -Address\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(TelephoneNumber)),\"Mandatory field missing-TelephoneNumber\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(TelephoneNumber)>20),\"Field length exceeded-TelephoneNumber\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull({E-mail})),\"Mandatory field missing-E-mail\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length({E-mail})>70),\"Field length exceeded -E-mail\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(SIMPhoneNumber)),\"Mandatory field missing-SIMPhoneNumber\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(SIMPhoneNumber)>11),\"Field length exceeded -SIMPhoneNumber\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(SalesChannel)),\"Mandatory field missing-SalesChannel\",\niif((upper($Operation)==\"ENROLLMENT\") && (length(SalesChannel)>32),\"Field length exceeded -SalesChannel\",\n\"\"))))))) )))))))))))))))))))))))),\n\t\tErrorcode = iif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && SalesNumberCount> 1 ,\"0001\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (isNull(Aggregate1@InitialSalesOrderNumber)),\"0002\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (length(Aggregate1@InitialSalesOrderNumber)>28),\"0003\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (isNull(CustomerID)),\"0004\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (length(CustomerID)>32),\"0006\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(ApplyDate)) ,\"0007\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(ApplyDatetoString) || length(ApplyDatetoString)<1) ,\"0029\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(OpenDate)) ,\"0008\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(OpenDatetoString) || length(OpenDatetoString)<1) ,\"0030\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(LastName)),\"0011\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(LastName) >30),\"0012\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(FirstName)) ,\"0009\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(FirstName) >60) ,\"0010\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(LastNameKana)),\"0015\", \niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(LastNameKana) >30),\"0016\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(FirstNameKana)),\"0013\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(FirstNameKana) >60),\"0014\",\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(Birthday)) ,\"0016\", \niif((upper($Operation)==\"ENROLLMENT\") && (isNull(BirthDaytoString) || length(BirthDaytoString)<1) ,\"0031\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(PostalCode)),\"0017\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(PostalCode)!=7),\"0027\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(Address)),\"0018\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(Address)>100),\"0019\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(TelephoneNumber)),\"0020\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(TelephoneNumber)>20),\"0028\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull({E-mail})),\"0021\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length({E-mail})>70),\"0022\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(SIMPhoneNumber)),\"0023\",\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(SIMPhoneNumber)>11),\"0024\",\niif((upper($Operation)==\"ENROLLMENT\" ) && (isNull(SalesChannel)),\"0025\",\niif((upper($Operation)==\"ENROLLMENT\" ) && (length(SalesChannel)>32),\"0026\",\n\"\"))))))) )))))))))))))))))))))))),\n\t\tIsValid = iif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && SalesNumberCount> 1 ,\"0\", \r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (isNull(Aggregate1@InitialSalesOrderNumber)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (length(Aggregate1@InitialSalesOrderNumber)>28),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (isNull(CustomerID)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\") && (length(CustomerID)>32),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(ApplyDate)) ,\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(ApplyDatetoString) || length(ApplyDatetoString)<1) ,\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(OpenDate)) ,\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(OpenDatetoString) || length(OpenDatetoString)<1) ,\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(FirstName)) ,\"0\", \r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(FirstName) >60) ,\"0\", \r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(LastName)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(LastName) >30),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(FirstNameKana)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(FirstNameKana) >60),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(LastNameKana)),\"0\", \r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(LastNameKana) >60),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(Birthday)) ,\"0\", \r\niif((upper($Operation)==\"ENROLLMENT\") && (isNull(BirthDaytoString) || length(BirthDaytoString)<1) ,\"0\", \r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(PostalCode)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(PostalCode)!=7),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(Address)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(Address)>100),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(TelephoneNumber)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(TelephoneNumber)>20),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull({E-mail})),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length({E-mail})>70),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (isNull(SIMPhoneNumber)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" || upper($Operation)==\"UPDATE\" ) && (length(SIMPhoneNumber)>11),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" ) && (isNull(SalesChannel)),\"0\",\r\niif((upper($Operation)==\"ENROLLMENT\" ) && (length(SalesChannel)>32),\"0\",\r\n\"1\"))))))) ))))))))))))))))))))))))) ~> Transform\nGetFileData select(mapColumn(\n\t\tInitialSalesOrderNumber,\n\t\tCustomerID,\n\t\tApplyDate,\n\t\tOpenDate,\n\t\tCloseDate,\n\t\tLastName,\n\t\tFirstName,\n\t\tLastNameKana,\n\t\tFirstNameKana,\n\t\tBirthday,\n\t\tPostalCode,\n\t\tAddress,\n\t\tTelephoneNumber,\n\t\t{E-mail},\n\t\tSIMPhoneNumber,\n\t\tShopID,\n\t\tSalesChannel,\n\t\tShopName,\n\t\tShopZipCode,\n\t\tShopAddress,\n\t\tShopTelephoneNumber,\n\t\tDisconnectionReason\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nGetFileData aggregate(groupBy(InitialSalesOrderNumber),\n\tSalesNumberCount = count(1)) ~> Aggregate1\nAggregate1, Select1 join(Aggregate1@InitialSalesOrderNumber == Select1@InitialSalesOrderNumber,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nTransform derive(PartitionKey = upper($filename),\n\t\tRowKey = uuid(),\n\t\tData = @(type=iif($Operation==\"ENROLLMENT\", \"Create\", \"Update\"),\n\t\tstatus=iif(length(Errorcode)>0,\"Rejected\",\"Validated\"),\n\t\tcampaignCode=campaignCode,\n\t\t{customer.id}=coalesce(CustomerID, \"\"),\n\t\t{customer.firstName}=coalesce(FirstName, \"\"),\n\t\t{customer.lastName}=coalesce(LastName, \"\"),\n\t\t{customer.firstNameKana}=coalesce(FirstNameKana, \"\"),\n\t\t{customer.lastNameKana}=coalesce(LastNameKana, \"\"),\n\t\t{customer.dateOfBirth}=iif($Operation==\"ENROLLMENT\", coalesce(coalesce(BirthDaytoString),''),''),\n\t\t{customer.workPhoneNumber}=coalesce(TelephoneNumber, \"\"),\n\t\t{customer.cellPhoneNumber}=coalesce(SIMPhoneNumber, \"\"),\n\t\t{customer.emailAddress}=coalesce({E-mail}, \"\"),\n\t\t{customer.address1}=coalesce(replace(Address,',',' '), \"\"),\n\t\t{customer.zipCode}=coalesce(PostalCode, \"\"),\n\t\t{customer.countryCode}=\"JP\",\n\t\t{owner.organization.code}=\"ASJP-AJP-RSIM\",\n\t\t{owner.serviceLineNumber}=coalesce(SIMPhoneNumber, \"\"),\n\t\t{origin.organization.code}=iif($Operation==\"ENROLLMENT\", coalesce(ShopID, \"\"),''),\n\t\t{origin.organization.name}=iif($Operation==\"ENROLLMENT\", coalesce(ShopName, \"\"),''),\n\t\t{origin.organization.workPhoneNumber}=iif($Operation==\"ENROLLMENT\", coalesce(ShopTelephoneNumber, \"\"),''),\n\t\t{origin.organization.address1}=iif($Operation==\"ENROLLMENT\", coalesce(replace(ShopAddress,',',' '), \"\"),''),\n\t\t{origin.organization.zipCode}=iif($Operation==\"ENROLLMENT\", coalesce(ShopZipCode, \"\"),''),\n\t\t{origin.organization.countryCode}=\"JP\",\n\t\t{origin.organization.disconnectionReason}='',\n\t\t{origin.channelCode}=iif($Operation==\"ENROLLMENT\", coalesce(SalesChannel, \"\"),''),\n\t\t{origin.salesOrderNumber}=coalesce(Select1@InitialSalesOrderNumber, \"\"),\n\t\teffectiveDate=iif($Operation==\"ENROLLMENT\", coalesce(coalesce(ApplyDatetoString),''),''),\n\t\topenDate=iif($Operation==\"ENROLLMENT\", coalesce(coalesce(OpenDatetoString),''),''),\n\t\tcloseDate=iif($Operation==\"ENROLLMENT\", coalesce(coalesce(CloseDatetoString),''),''),\n\t\terrors=array(iif(length(Errorcode)>0,@(code=Errorcode,\n\t\tdescription=Error))))) ~> TransformToFileDetails\nTransformToFileDetails derive(PartitionKey = PartitionKey,\n\t\tRowKey = RowKey,\n\t\tData_String = toString(Data)) ~> TransformToFileDetailsCSV\nTransform aggregate(groupBy(fileName = $filename),\n\tRejectedRecords = sum(iif(IsValid==\"0\", 1, 0)),\n\t\tValidatedRecords = sum(iif(IsValid==\"1\", 1, 0))) ~> Aggregate2\nAggregate2 derive(partitionKey = upper($filename),\n\t\trowKey = concat('FileInfo-',fileName),\n\t\tdata = @(status=\"Loaded\",\n\t\tvalidatedRecords=ValidatedRecords,\n\t\trejectedRecords=RejectedRecords,\n\t\tqueuedRecords=0,\n\t\tprocessedRecords=0,\n\t\terrors=array()),\n\t\tRejected = iif((RejectedRecords+ValidatedRecords)==RejectedRecords, \"1\",\"0\")) ~> TransformFileinfo\nTransformFileinfo derive(partitionKey = partitionKey,\n\t\trowKey = rowKey,\n\t\tData_String = toString(data),\n\t\tStatus = \"Loaded\") ~> TransformFileInfoCSV\nCheckDateColumnsYear derive(BirthDaytoString = iif(IsBirthDayYearValid==1,{BirthDaytoDate},''),\n\t\tApplyDatetoString = iif(IsApplyDateYearValid==1,{ApplyDatetoDate},''),\n\t\tOpenDatetoString = iif(IsOpenDateYearValid==1,{OpenDatetoDate},''),\n\t\tCloseDatetoString = iif(IsCloseDateYearValid==1,{CloseDatetoDate},'')) ~> TransformDateFields\nJoin1 derive(IsBirthDayYearValid = iif(year(toDate(Birthday, 'yyyy/MM/dd'))>=1000,1,0),\n\t\tBirthDaytoDate = toString(toDate(Birthday, 'yyyy/MM/dd')),\n\t\tIsApplyDateYearValid = iif(year(toDate(ApplyDate, 'yyyy/MM/dd'))>=1000,1,0),\n\t\tApplyDatetoDate = toString(toDate(ApplyDate, 'yyyy/MM/dd')),\n\t\tIsOpenDateYearValid = iif(year(toDate(OpenDate, 'yyyy/MM/dd'))>=1000,1,0),\n\t\tOpenDatetoDate = toString(toDate(OpenDate, 'yyyy/MM/dd')),\n\t\tIsCloseDateYearValid = iif(year(toDate(CloseDate, 'yyyy/MM/dd'))>=1000,1,0),\n\t\tCloseDatetoDate = toString(toDate(CloseDate, 'yyyy/MM/dd'))) ~> CheckDateColumnsYear\nTransformToFileDetailsCSV sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(replace(upper($filename), \".TXT\", \".csv\"))],\n\tmapColumn(\n\t\tPartitionKey,\n\t\tRowKey,\n\t\tData = Data_String\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ProcessToFileDetails\nTransformFileInfoCSV sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(replace(upper($filename), \".TXT\", \".csv\"))],\n\tmapColumn(\n\t\tPartitionKey = partitionKey,\n\t\tRowKey = rowKey,\n\t\tData = Data_String,\n\t\tStatus\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ProcessToFileInfo"
				}
			},
			"dependsOn": []
		}
	]
}